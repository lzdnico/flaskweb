# coding=utf-8
import  sys
import  base64
import  re
import  requests
import  urllib3
import  urllib
import  json
import  time
import codecs
urllib3.disable_warnings()
def Retry_request(url): #ËøúÁ®ã‰∏ãËΩΩ
    i = 0
    for i in range(3):
        try:
            header = {'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.90 Safari/537.36'}
            res = requests.get(url, headers=header, timeout=5, verify=False) # verify =false Èò≤Ê≠¢ËØ∑Ê±ÇÊó∂Âõ†‰∏∫‰ª£ÁêÜÂØºËá¥ËØÅ‰π¶‰∏çÂÆâÂÖ®
            if res.headers['Connection']!='close':
                flag=False
                return res.text
        except Exception as e:
            i = i+1
            print('ÈáçÊñ∞‰∏ãËΩΩÔºö'+url)

def getrules():             # Ëá™ÂÆö‰πâËßÑÂàô
    
    try:
        rules = Retry_request('https://raw.githubusercontent.com/ConnersHua/Profiles/master/Clash/Pro.yaml')        #ËØ∑Ê±ÇËßÑÂàô_Á•ûÊú∫ËßÑÂàô
       
        l_rule =  rules.split('Rule:\n')[1].replace('GlobalMedia','ÂõΩÈôÖÂ™í‰Ωì').replace('HKMTMedia','ÂõΩÂÜÖÂ™í‰Ωì').replace('Hijacking','ÊÅ∂ÊÑèÁΩëÁ´ô').replace('Final','ÊºèÁΩë‰πãÈ±º').replace('PROXY','‰ª£ÁêÜÊ®°Âºè')
        l_rule2 =  rules.split('Rule:\n')[1].replace('GlobalMedia','üåç ÂõΩÂ§ñÂ™í‰Ωì').replace('HKMTMedia','üåè ÂõΩÂÜÖÂ™í‰Ωì').replace('Hijacking','‚õîÔ∏è ÊÅ∂ÊÑèÁΩëÁ´ô').replace('Final','üêü ÊºèÁΩë‰πãÈ±º').replace('PROXY','üî∞ ‰ª£ÁêÜÊ®°Âºè')
 
        nf_rule = l_rule.split('# > Netflix\n')[1].split('# > niconico\n')[0].replace('ÂõΩÈôÖÂ™í‰Ωì','Netflix') + '\n'
        nf_rule2 = l_rule.split('# > Netflix\n')[1].split('# > niconico\n')[0].replace('ÂõΩÈôÖÂ™í‰Ωì','üé• NETFLIX') + '\n'
        nf2_rule = l_rule.split('# > Netflix\n')[2].split('# GeoIP China\n')[0].replace('ÂõΩÈôÖÂ™í‰Ωì','Netflix') + '\n'
        nf2_rule2 = l_rule.split('# > Netflix\n')[2].split('# GeoIP China\n')[0].replace('ÂõΩÈôÖÂ™í‰Ωì','üé• NETFLIX') + '\n'

        bahamut_rule = l_rule.split('# > Bahamut\n')[1].split('# > BBC iPlayer\n')[0].replace('ÂõΩÈôÖÂ™í‰Ωì','Âä®ÁîªÁñØ') + '\n'
        bahamut_rule2 = l_rule.split('# > Bahamut\n')[1].split('# > BBC iPlayer\n')[0].replace('ÂõΩÈôÖÂ™í‰Ωì','üì∫ Â∑¥ÂìàÂßÜÁâπ') + '\n'

        ytb_rule = l_rule.split('# > Youtube\n')[1].split('# > ÊÑõÂ•áËóùÂè∞ÁÅ£Á´ô\n')[0].replace('ÂõΩÈôÖÂ™í‰Ωì','Youtube') + '\n'
        ytb_rule2 = l_rule.split('# > Youtube\n')[1].split('# > ÊÑõÂ•áËóùÂè∞ÁÅ£Á´ô\n')[0].replace('ÂõΩÈôÖÂ™í‰Ωì','üìπ YouTube') + '\n'
        
        apple ='# > Apple\n'+ l_rule.split('# > Apple\n')[2].split('# Local Area Network\n')[0].replace('Apple','Apple') + '\n'
        apple2 ='# > Apple\n'+ l_rule.split('# > Apple\n')[2].split('# Local Area Network\n')[0].replace('Apple','üçé ËãπÊûúÊúçÂä°') + '\n'

        with open("./config/selfrules.yml", "r",encoding = 'utf-8') as f:
            selfrule = '\n'+f.read() + '\n'

        last = l_rule.split('# GeoIP China')[1]
        last2 = l_rule2.split('# GeoIP China')[1]
        above = l_rule.split('# GeoIP China')[0]
        above2 = l_rule2.split('# GeoIP China')[0]
        l_rule =  apple + bahamut_rule + ytb_rule + nf_rule + nf2_rule + above + selfrule + last

        l_rule2 =  apple2 + bahamut_rule2 + ytb_rule2 + nf_rule2 + nf2_rule2 + above2 + selfrule + last2
        with codecs.open("./config/lrules.yml", "w",encoding = 'utf-8') as f:
            f.writelines(l_rule) 
        with codecs.open("./config/customlrules.yml", "w",encoding = 'utf-8') as f:
            f.writelines(l_rule2) 

 

    
    except Exception as e:
        print(e)

if __name__ == '__main__':
    getrules()